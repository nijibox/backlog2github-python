#!/usr/bin/env python
from __future__ import unicode_literals
import os
import ConfigParser
import argparse
import time
import yaml
from backlog import Project, Api as BacklogApi
from progress import ProgressText


CONFIG_DEFAULT_PATH = os.path.join(
    os.path.dirname(__file__),
    'app.ini',
)


parser = argparse.ArgumentParser()
parser.add_argument('-c', '--conf', type=str, default=CONFIG_DEFAULT_PATH)
parser.add_argument('-o', '--output', type=str, default='.')
parser.add_argument('key', type=str)
parser.add_argument('--filter', type=str, required=False)

args = parser.parse_args()

config = ConfigParser.ConfigParser()
config.read(args.conf)


backlog = BacklogApi(config.get('Backlog', 'space_id'), config.get('Backlog', 'api_key'))

if '--' in args.key:
    project = Project.from_api(args.key[:-2], backlog)
    max_issue = project.get_issues(params={'sort': 'created', 'order': 'desc', 'count': 1})[0]
    maxIssueKey = int(max_issue._data['issueKey'].split('-')[1])
    progress = ProgressText(max_value=maxIssueKey)
    progress.display(0)
    for key in range(1, maxIssueKey+1):
        issueKey = '{}-{}'.format(project._data['projectKey'], key)
        issue_dir = os.path.join(args.output, issueKey)
        if os.path.exists(issue_dir):
            continue
        issue = backlog.get_issue(issueKey)
        if 'issueKey' not in issue._data:
            continue
        issue.init_workspace(args.output)
        issue.dump_all()
        progress.display(key)
        time.sleep(1)
    progress.end()
elif '-' in args.key:
    # key is issue
    issue = backlog.get_issue(args.key)
    if 'issueKey' not in issue._data:
        exit(0)
    issue.init_workspace(args.output)
    issue.dump_all()
else:
    # key is project
    project = Project.from_api(args.key, backlog)
    issues = project.get_issues()
    for issue in issues:
        print(u'{}: {}'.format(issue._data['issueKey'], issue._data['summary']))
        # print('\n')
